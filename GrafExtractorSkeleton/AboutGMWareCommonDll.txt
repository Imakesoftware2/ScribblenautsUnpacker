About GMWareCommon.dll
======================

This is my class library for useful and commonly used code. I mostly 
deal with GRAF extraction, so all the code in there right now is for IO. 
Let's take a look at them. All of the following classes are in the 
namespace "GMWare.IO". 

StreamUtils
-----------

DeflateStream OpenDeflateDecompressionStreamCheap(Stream stream)
Opens a DeflateStream for reading from Zlib streams. It assumes the data 
after the Zlib header is compressed with DEFLATE. It leaves the 
underlying stream open. 

DeflateStream OpenDeflateDecompressionStreamCheap(Stream stream, bool leaveOpen)
Opens a DeflateStream for reading from Zlib streams. It allows you to 
specify whether to leave the underlying stream open when the 
DeflateStream is closed. 

void StreamCopy(Stream src, Stream dest)
Copies an entire stream to another stream.

bool StreamCopyWithLength(Stream src, Stream dest, int length)
Copies part of a stream to another stream. Returns true if requested 
length is copied. 

SubStream
---------
It's a stream within a stream. Useful if you are using offsets relative 
to the beginning of a file chunk rather than the outer file. 

SubStream(Stream baseStream, long offset, long length, bool writable);
baseStream: The stream to create a substream from
offset: The offset to the beginning of the substream
length: Length of the substream
writable: Allows the substream to be writable, but have a length no 
          longer than the "length" argument 

BaseXoringStream
----------------
An abstract class for performing XOR encryption on a stream. Implement 
the following: 

protected override byte getNextKeyByte();
Returns the next XOR byte to apply to the stream. If your XOR encryption 
is scrolling, you have to keep track of the position of the scrolling 
key yourself. 

public override bool CanSeek { get; }
If you are using a scrolling key and it's easy to calculate the key 
position, return true. Make sure to check BaseStream's CanSeek property. 

public override long Seek(long offset, SeekOrigin origin)
Seek your scrolling key position here if feasible.

public override void SetLength(long value);
I actually don't remember what specific implementation details goes into 
this. Just call BaseStream.SetLength() if BaseStream supports so. 

StaticKeyXoringStream
---------------------
Performs XOR encryption on a stream using a single byte value.

StringXoringStream
------------------
Performs XOR encryption on a stream using byte values of each character 
in sequence. It also loops. 
